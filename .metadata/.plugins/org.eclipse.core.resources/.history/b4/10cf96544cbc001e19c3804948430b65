package boot.data.service;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLDecoder;
import java.util.Optional;
import java.util.UUID;

import javax.servlet.http.HttpSession;

import java.util.Objects;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.amazonaws.services.s3.AmazonS3Client;
import com.amazonaws.services.s3.model.CannedAccessControlList;
import com.amazonaws.services.s3.model.DeleteObjectRequest;
import com.amazonaws.services.s3.model.ObjectMetadata;
import com.amazonaws.services.s3.model.PutObjectRequest;
import com.amazonaws.util.IOUtils;

import boot.data.dto.MemberDto;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
@RequiredArgsConstructor
public class S3Service {

	private final AmazonS3Client amazonS3Client;
	
	@Value("${cloud.aws.s3.bucket}")
	private String bucket;
	@Value("${cloud.aws.s3.upload-profile}")
	private String uploadprofile;
	
	@Autowired
	MemberService mservice;
	 

	  private String uploadImageToS3(MultipartFile image,MemberDto dto ,HttpSession session) throws IOException {
		  String loginemail = (String) session.getAttribute("loginemail");
			String nickname = mservice.getMemberName(loginemail);
			System.out.println(nickname);
			
		  String name = nickname + "_" + image.getOriginalFilename();
			String bucketkey = uploadprofile + name;
			ObjectMetadata objectMetadata = new ObjectMetadata();
			objectMetadata.setContentType(image.getContentType());
			objectMetadata.setContentLength(image.getSize());
		
	    
	    	PutObjectRequest putObjectRequest = new PutObjectRequest(bucket, bucketkey, image.getInputStream(),
					objectMetadata);
	    	amazonS3Client.putObject(putObjectRequest.withCannedAcl(CannedAccessControlList.PublicRead));
			log.debug("s3 파일 업로드 완료");
	      amazonS3Client.putObject(putObjectRequest); // put image to S3
	      String uploadurl = amazonS3Client.getUrl(bucket, bucketkey).toString();
			System.out.println(uploadurl);
			if (image.isEmpty()) {
				dto.setMember_photo(null);
			} else {
				dto.setMember_photo(uploadurl);
				mservice.MemberProfileUpdate(dto);
			}

	    return amazonS3Client.getUrl(bucket, bucketkey).toString();
	  }

	  public void deleteImageFromS3(String imageAddress){
	    String key = getKeyFromImageAddress(imageAddress);
	    try{
	    	amazonS3Client.deleteObject(new DeleteObjectRequest(bucket, key));
	    }catch (Exception e){
	      throw new IllegalArgumentException("Error: IO_EXCEPTION_ON_IMAGE_DELETE");
	    }
	  }

	  private String getKeyFromImageAddress(String imageAddress){
	    try{
	      URL url = new URL(imageAddress);
	      String decodingKey = URLDecoder.decode(url.getPath(), "UTF-8");
	      return decodingKey.substring(1); // 맨 앞의 '/' 제거
	    }catch (MalformedURLException | UnsupportedEncodingException e){
	      throw new IllegalArgumentException("Error: IO_EXCEPTION_ON_IMAGE_DELETE");
	    }
	  }
	
	
}
