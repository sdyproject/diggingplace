package boot.data.service;

import java.io.IOException;
import java.net.URL;
import java.net.URLDecoder;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import com.amazonaws.services.s3.AmazonS3Client;
import com.amazonaws.services.s3.model.CannedAccessControlList;
import com.amazonaws.services.s3.model.DeleteObjectRequest;
import com.amazonaws.services.s3.model.ObjectMetadata;
import com.amazonaws.services.s3.model.PutObjectRequest;

import boot.data.dto.MemberDto;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

import java.util.Objects;

@Slf4j
@RequiredArgsConstructor
@Component
public class S3Service {

	
	private final AmazonS3Client amazonS3Client;
	@Value("${cloud.aws.s3.bucket}")
	private String bucket;
	@Value("${cloud.aws.s3.upload-profile}")
	private String uploadprofile;

	@Autowired
	MemberService mservice;
	
	public String upload(MultipartFile image)throws IOException {
		  //입력받은 이미지 파일이 빈 파일인지 검증
		  if(image.isEmpty() || Obje.isNull(image.getOriginalFilename())){
		   
		  }
		  //uploadImage를 호출하여 S3에 저장된 이미지의 public url을 반환한다.
		  return this.uploadImage(image);
		}
	
	
	public String updateprofile(MultipartFile image,HttpSession session, MemberDto dto) throws IOException {
		String loginemail = (String) session.getAttribute("loginemail");
		String nickname = mservice.getMemberName(loginemail);
		System.out.println(nickname);
		String name = nickname + "_" + image.getOriginalFilename();
		String bucketkey = uploadprofile + name;
		ObjectMetadata objectMetadata = new ObjectMetadata();
		objectMetadata.setContentType(image.getContentType());
		objectMetadata.setContentLength(image.getSize());
		PutObjectRequest putObjectRequest = new PutObjectRequest(bucket, bucketkey, image.getInputStream(),
				objectMetadata);
		amazonS3Client.putObject(putObjectRequest.withCannedAcl(CannedAccessControlList.PublicRead));
		log.debug("s3 파일 업로드 완료");
		String uploadurl = amazonS3Client.getUrl(bucket, bucketkey).toString();
		System.out.println(uploadurl);
		if (image.isEmpty()) {
			dto.setMember_photo(null);
		} else {
			dto.setMember_photo(uploadurl);
			mservice.MemberProfileUpdate(dto);
		}
		return "redirect:/myinfo";
		}
	
	public void deleteImageFromS3(String imageAddress) throws IOException{
	    String key = getKeyFromImageAddress(imageAddress);
	    
	    	amazonS3Client.deleteObject(new DeleteObjectRequest(bucket, key));
	    
	  }
	
	private String getKeyFromImageAddress(String imageAddress)throws IOException{
	  
	      URL url = new URL(imageAddress);
	      String decodingKey = URLDecoder.decode(url.getPath(), "UTF-8");
	      System.out.println(decodingKey);
	      return decodingKey.substring(1); // 맨 앞의 '/' 제거
	   
	  }

}
